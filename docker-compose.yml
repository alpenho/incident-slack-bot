version: '3'
services:
  db:
    image: postgres:15.4-alpine
    container_name: incident-slack-bot-postgres-15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: "postgres -c 'max_connections=500'"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "8080:8080"
  redis:
    image: redis:7.2-alpine
    container_name: incident-slack-bot-redis-15
    volumes:
      - redis_data:/var/lib/redis/data
  incident-slack-bot:
    build: .
    command: "./bin/rails server"
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - SLACK_TOKEN=${SLACK_TOKEN}
      - SLACK_OAUTH_TOKEN=${SLACK_OAUTH_TOKEN}
    volumes:
      - app-storage:/rails/storage
    depends_on:
      - db
      - redis
    ports:
      - "3000:3000"
    tty: true
    stdin_open: true
  sidekiq:
    build: .
    command: bundle exec sidekiq
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - SLACK_TOKEN=${SLACK_TOKEN}
      - SLACK_OAUTH_TOKEN=${SLACK_OAUTH_TOKEN}
      - REDIS_URL=${REDIS_URL}
    volumes:
      - app-storage:/rails/storage
    depends_on:
      - db
      - redis

volumes:
  postgres_data: {}
  redis_data: {}
  app-storage: {}
